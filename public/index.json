[{"content":"Hi, I write about linux üêß, selfhosting üèóÔ∏è, infrastructure üöÄ and sometimes common life üåé stuff.\n","date":null,"permalink":"/","section":"","summary":"Hi, I write about linux üêß, selfhosting üèóÔ∏è, infrastructure üöÄ and sometimes common life üåé stuff.","title":""},{"content":"In the rapidly evolving landscape of consumer technology, few voices command as much influence and respect as MKBHD. With his discerning eye for detail and knack for dissecting the latest gadgets, he has become a trusted guide for millions of tech enthusiasts worldwide. However, recent developments have raised concerns about his seemingly unwavering support for proprietary tech ecosystems.\nIn his numerous reviews and analyses, MKBHD has consistently praised products tightly integrated into closed ecosystems, such as Apple\u0026rsquo;s iOS and Google\u0026rsquo;s Pixel lineup. While it\u0026rsquo;s undeniable that these platforms offer polished user experiences and seamless integration, they come at a significant cost: user freedom and choice.\nOne cannot help but question MKBHD\u0026rsquo;s reluctance to critique the inherent limitations of these ecosystems. By endorsing them without reservation, he perpetuates a culture of complacency among consumers, discouraging them from demanding more open and interoperable alternatives.\nFurthermore, MKBHD\u0026rsquo;s stance overlooks the broader implications of supporting closed ecosystems. By funneling users into proprietary platforms, tech giants like Apple and Google amass unprecedented control over vast swathes of digital infrastructure, stifling competition and innovation in the process.\nIn a landscape where privacy concerns loom large and antitrust scrutiny intensifies, it is incumbent upon influencers like MKBHD to advocate for a more balanced and nuanced approach to technology. Instead of reflexively championing the latest offerings from industry giants, he should use his platform to foster a critical dialogue about the long-term implications of embracing closed ecosystems.\nIn conclusion, while MKBHD\u0026rsquo;s contributions to the tech community are undeniable, his uncritical acceptance of proprietary tech ecosystems represents a blind spot that cannot be ignored. As consumers, we must demand more from those who shape our perceptions of technology and hold them accountable for promoting a future that prioritizes openness, innovation, and user empowerment.\n","date":"11 February 2024","permalink":"/posts/2024-02-11-mkbhd/","section":"Posts","summary":"In the rapidly evolving landscape of consumer technology, few voices command as much influence and respect as MKBHD.","title":"MKBHD's Blind Spot: The Perils of Proprietary Tech Ecosystems"},{"content":"","date":null,"permalink":"/posts/","section":"Posts","summary":"","title":"Posts"},{"content":"","date":"23 October 2023","permalink":"/posts/2023-10-23-learning-awk/","section":"Posts","summary":"","title":"Learning AWK"},{"content":"","date":null,"permalink":"/tags/scripting/","section":"Tags","summary":"","title":"Scripting"},{"content":"","date":null,"permalink":"/tags/","section":"Tags","summary":"","title":"Tags"},{"content":"","date":null,"permalink":"/tags/homelab/","section":"Tags","summary":"","title":"Homelab"},{"content":"Why I love linux as a homelabber # As a homelabber, I have come to appreciate and love Linux for its flexibility, security, and versatility. Linux has become a staple of my homelab, and I cannot imagine using any other operating system for my home projects and experiments.\nFlexibility # One of the primary reasons I love Linux as a homelabber is its flexibility. Linux provides an open-source platform that allows users to customize and modify the software to their liking. This flexibility is especially valuable for homelabbers who want to experiment with different setups and configurations. With Linux, I can easily configure and optimize my homelab to suit my specific needs, whether it\u0026rsquo;s for web hosting, virtualization, or media streaming.\nSecurity # Another reason I love Linux as a homelabber is its security. Linux is known for its robust security features, which are built into the core of the operating system. Unlike other operating systems that require third-party antivirus software, Linux has security features like SELinux, AppArmor, and kernel-level security modules that protect against malware, viruses, and other cyber threats. This security is especially important for homelabbers who want to protect their data and devices from potential cyberattacks.\nVersatility # Linux\u0026rsquo;s versatility is another aspect that makes it an excellent choice for homelabbers. Linux can run on almost any device, making it an ideal choice for homelabbers who want to experiment with different hardware setups. Additionally, Linux supports a wide range of software and applications, making it easy for homelabbers to find the right tools for their projects.\nCost-effectiveness # One of the most significant benefits of using Linux as a homelabber is its cost-effectiveness. Linux is free and open source, meaning there are no licensing costs or fees associated with its use. This cost-effectiveness is especially valuable for homelabbers who may have a limited budget but still want to experiment with different setups and configurations.\nFinally, one of the most significant reasons I love Linux as a homelabber is its community. The Linux community is passionate, welcoming, and always willing to help others. There are countless forums, blogs, and websites dedicated to Linux, where homelabbers can find answers to their questions, troubleshoot issues, and share knowledge with other users. This community is especially valuable for homelabbers who may be new to Linux or have limited experience with the operating system.\nMy Homelab Network Diagram # In conclusion, Linux is an ideal choice for homelabbers who want a flexible, secure, and versatile operating system. Its open-source nature, security, versatility, cost-effectiveness, and community all contribute to its appeal. As someone who has used Linux in my homelab for years, I can say that it has become an essential part of my home computing experience. Whether it\u0026rsquo;s for personal or professional use, Linux is a powerful and reliable operating system that continues to evolve and improve with each passing year.\n","date":"23 February 2023","permalink":"/posts/2023-02-23-why-i-love-linux-as-a-homelabber/","section":"Posts","summary":"Why I love linux as a homelabber # As a homelabber, I have come to appreciate and love Linux for its flexibility, security, and versatility.","title":"Why I love Linux as a homelabber"},{"content":"","date":null,"permalink":"/tags/resume/","section":"Tags","summary":"","title":"Resume"},{"content":"Download Here\nShashank # üìß mail@shashank.work\nüì± +91-XXXXXXXXXX\nüåê https://shashank.work\nüîë 3487 d92c b2bd 369d 27e8\nBio # Shashank is a highly motivated Linux enthusiast with a passion for open-source software and system administration. He has a strong background in computational sciences and a deep understanding of Linux operating systems, virtualization, and containerization technologies. Shashank is a quick learner with excellent problem-solving skills and a keen attention to detail. He is a collaborative team player who values communication and is always willing to help his colleagues. In his free time, Shashank enjoys tinkering with his homelab, exploring new technologies, and contributing to various open-source projects.\n### Education --- - **Master's in Computational Biology** _School of Computational and Integrative Sciences, Jawaharlal Nehru University - New Delhi_ July 2017 to April 2019 Bachelor\u0026rsquo;s in Botany\nHansraj College, University of Delhi - New Delhi\nJuly 2013 to April 2016 Skills # Skill Tools OS Containers Hyper-V Networking Cloud Language Monitoring Misc Experience # -\u0026gt; School of Computational and Integrative Sciences, JNU, New Delhi\nJuly 2018 to December 2018\nAssisted in VM deployments for school projects Setup backup scripts for remote backups Setup remote access Resolved server based configuration problems, wrote scripts to ensure smooth server/reboot functioning and assisted with various Linux concerns and queries. Projects # -\u0026gt; Homelab\nSeptember 2019 to today\nSince August of 2019, I have been maintaining a homelab which hosts a few of my services which I cater to few people from my family and friends around 15 of them.\nServices I am hosting:\nNextcloud - Google Workspace alternative Bitwarden - Password Manager for all Pihole - Selfhosted DNS and Adblocker Portainer - For docker management Nginx - Web hosting CloudFlare tunnels - Secure reverse proxy that safely exposes my services to internet without port forwarding in my router Wireguard - Selfhosted VPN Proxmox - Awesome hypervisor that gives me unlimited virtual machines and containers Service uptime alerts MySQL server Hardware I am using:\nTwo 6th gen intel powered laptops now turned into ubuntu servers 100mbps D-link switch Nokia G-240 Dual band router Lan cables, various connectors 1 Digitalocean droplet for personal VPN Master node\nIn the span of last 3 years I have managed these services with maximum uptime, on time server maintenance and managed logs counter actively. While managing these services there were scenarios when I learned about the importance of shell scripting for automated backups and server patching. My go to containerization solution is docker and lxc depending on the applicaion requirements. Please check out my public services:\n-\u0026gt; üîó (sign up\u0026rsquo;s now closed because of abuse) -\u0026gt; üîó (sign up\u0026rsquo;s now closed because of abuse) Pastebin -\u0026gt; üîó Online Profiles # https://github.com/depgod https://shashank.work https://t.me/blahblahblah269 https://discord.com/users/commandline#5301 https://steamcommunity.com/id/kama13/ ","date":"14 January 2023","permalink":"/posts/2023-01-14-resume/","section":"Posts","summary":"Download Here","title":"Resume"},{"content":"","date":null,"permalink":"/tags/networking/","section":"Tags","summary":"","title":"Networking"},{"content":"Zerotier instead of Tailscale # ZeroTier and Tailscale are two popular software-defined networking (SDN) solutions that provide secure and flexible networking options for businesses and individuals. While both platforms offer similar functionality, there are some key differences that make ZeroTier a better choice for certain use cases.\nOpensource nature # One of the main advantages of ZeroTier is its open-source nature. Unlike Tailscale, which is a closed-source commercial product, ZeroTier is fully open-source, which means users have complete control over the code and can modify it to meet their specific needs. This also means that ZeroTier is free to use for most personal and non-commercial purposes, making it a more cost-effective option for individuals and small businesses.\nCompatibility # Another key advantage of ZeroTier is its support for a wider range of platforms and devices. While Tailscale only works with a limited number of operating systems and devices, including Linux, macOS, Windows, and iOS, ZeroTier supports a much wider range of platforms, including Android, FreeBSD, OpenBSD, and even some IoT devices. This makes ZeroTier a more versatile solution for organizations that need to connect devices running on different operating systems and platforms.\nFlexible and Scalable # In addition to its broad platform support, ZeroTier also offers a more flexible and scalable networking architecture. Unlike Tailscale, which relies on a centralized server for routing and management, ZeroTier uses a distributed network architecture, where each node acts as a peer in the network and can route traffic to other nodes. This allows for greater redundancy and fault tolerance, as there is no single point of failure in the network. It also makes it easier to scale the network as new nodes can be added easily without requiring any central configuration.\nVLAN\u0026rsquo;s # Another advantage of ZeroTier is its support for virtual LANs (VLANs), which allow users to segment the network and control access to different resources. This is especially useful for organizations that need to provide secure access to different departments or teams within the company. Tailscale, on the other hand, does not support VLANs, which means users have limited control over network segmentation and access control.\nConclusion # Finally, ZeroTier offers a more customizable and extensible platform than Tailscale. Because it is open-source, users can modify the code to add new features or integrate it with other tools and services. This makes it a more adaptable solution for organizations that have specific requirements or need to integrate with other systems.\nWhile Tailscale has its advantages, including a user-friendly interface and ease of use, ZeroTier is a more versatile and customizable solution that offers greater flexibility, scalability, and control. For individuals and small businesses, ZeroTier is a more cost-effective option that provides access to a wide range of platforms and devices, while for larger organizations that need to scale their networks and control access to different resources, ZeroTier\u0026rsquo;s distributed architecture and support for VLANs make it a better choice.\n","date":"26 November 2022","permalink":"/posts/2022-11-26-zerotier-instead-of-tailscale/","section":"Posts","summary":"Zerotier instead of Tailscale # ZeroTier and Tailscale are two popular software-defined networking (SDN) solutions that provide secure and flexible networking options for businesses and individuals.","title":"Zerotier instead of Tailscale"},{"content":"","date":null,"permalink":"/tags/life/","section":"Tags","summary":"","title":"Life"},{"content":"Services # I have set up self-hosted free services in my homelab for several reasons. First, it allows me to learn and experiment with different technologies and tools. By setting up and maintaining these services myself, I gain practical experience and knowledge that I can apply to other projects.\nSecond, it gives me more control over my data and privacy. By self-hosting services such as Nextcloud for file storage and email, I can ensure that my data is stored locally and not on third-party servers. This gives me greater control over who has access to my data and how it is used.\nThird, it is a cost-effective solution. By self-hosting services on my own hardware, I don\u0026rsquo;t have to pay for expensive subscriptions or hosting fees. This allows me to experiment with different services without worrying about the cost.\nFinally, it is a fun and rewarding hobby. Setting up and maintaining a homelab can be challenging at times, but it is also very satisfying to see the services I\u0026rsquo;ve set up running smoothly and efficiently. It is a great way to learn new skills and keep myself engaged in the world of technology.\nServices Links Bitwarden üîó Librecloud (Nextcloud) üîó LibReddit üîó LibreX üîó FreshRSS üîó Openspeedtest üîó üå±Upcoming stuff:\nüì• Web Email üåê DNS üîó Linkshortner ","date":"21 November 2022","permalink":"/posts/2022-11-21-services/","section":"Posts","summary":"Services # I have set up self-hosted free services in my homelab for several reasons.","title":"Services"},{"content":"Why this blog # As a lover of all things cyberpunk, Linux, and technology, I was inspired to create this website to share my passion and knowledge with like-minded individuals around the world. I wanted to create a platform where I could write about the latest trends and advancements in the tech world, share my thoughts and ideas on cyberpunk culture, and provide tips and tutorials for those interested in Linux and other open-source software. Linux # One of my main motivations for creating this website was to promote the use of Linux and other open-source software. I firmly believe that open-source software is the future of computing, as it allows for greater transparency, security, and flexibility than proprietary software. By sharing my knowledge and experiences with Linux and other open-source tools, I hope to encourage others to make the switch and experience the benefits of open-source software for themselves.\nCyberpunk genre # Another source of inspiration for this website was the cyberpunk genre itself. Cyberpunk has always been a fascinating and influential movement in popular culture, and it has inspired countless works of fiction, art, and technology over the years. By exploring the themes and ideas of cyberpunk culture on this website, I hope to connect with other fans of the genre and share our mutual love for all things cyberpunk.\nTrends # Technology is also a major source of inspiration for this website. As someone who has always been interested in the latest gadgets and advancements in computing, I wanted to create a platform where I could write about the latest trends and innovations in the tech world. Whether it\u0026rsquo;s the latest smartphone release or the newest development in artificial intelligence, I aim to provide insightful and engaging content that keeps readers up to date on the latest happenings in the tech industry.\nCommunity # In creating this website, I also hope to foster a sense of community among like-minded individuals who share my interests in cyberpunk, Linux, and technology. By providing a platform for discussion and collaboration, I aim to create a space where readers can connect with each other, share their own experiences and knowledge, and collaborate on projects and ideas related to our shared interests.\nOverall, my goal with this website is to create a space where I can explore my passions for cyberpunk, Linux, and technology, while also connecting with others who share these interests. Whether you\u0026rsquo;re a seasoned Linux user, a die-hard cyberpunk fan, or simply someone who loves technology and all its possibilities, I hope you\u0026rsquo;ll find something to enjoy on this website, and that you\u0026rsquo;ll join me on this journey of exploration and discovery.\nThanks for reading.\nLooking for more ? Check out my blog \u0026raquo;\u0026gt; üè†\n","date":"21 November 2022","permalink":"/posts/2022-11-21-this-blog/","section":"Posts","summary":"Why this blog # As a lover of all things cyberpunk, Linux, and technology, I was inspired to create this website to share my passion and knowledge with like-minded individuals around the world.","title":"This blog"},{"content":"Adding permissions # In order to change permissions of a file we can use specific options with the chmod command.\nImportant options # Option Examples user u+ u+w / u+rw / u+rwx group g+ g+w / g+rw / g+rwx others o+ o+w / o+rw / o+rwx Example:\n\u0026gt; ls -l -r--rw----. 1 aaron family 49 Oct 27 14:41 family_dog.jpg Here we can see aaron has only read permission, what if we want to change this to read and write permissions both, we will use it like this:\n$ chmod u+w family_dog.jpg and now if we do ls -l:\n$ -rw-rw----. 1 aaron family 49 Oct 27 14:41 family_dog.jpg Now we see user aaron has write permission to the file.\nRemoving permissions # Just as like in adding permissions we used u+ or g+ we will use u- or g-:\nOption Examples user u- u-w / u-rw / u-rwx group g- g-w / g-rw / g-rwx others o- o-w / o-rw / o-rwx Example:\nHere we can see that we are removing write permission from the user:\n$ chmod u-w family_dog.jpg Now if we check by ls -l write permission is gone fromthe user:\n$ -r--rw----. 1 aaron family 49 Oct 27 14:41 family_dog.jpg ","date":"14 November 2022","permalink":"/posts/2022-11-14-adding-removing-permissions/","section":"Posts","summary":"Adding permissions # In order to change permissions of a file we can use specific options with the chmod command.","title":"Adding and removing Permissions"},{"content":"Chaining Permissions # In chaining permissions we give simultaneous permissions to different sets be it user or groups or others.\nExample:\nchmod u+rw,g=r,o= family_dog.jpg Here we can see that we gave user read and write permission and gave group read permission and nothing to other users. This is how we chain permissions in one command.\n","date":"14 November 2022","permalink":"/posts/2022-11-14-chaining-permissions/","section":"Posts","summary":"Chaining Permissions # In chaining permissions we give simultaneous permissions to different sets be it user or groups or others.","title":"Chaining Permissions"},{"content":"File and Directory Permissions # Understanding read, write and executable permissions.\nIf we do ls -l:\n$ .rw-rw-r-- user family 168 B Sun Nov 13 01:59:08 2022 things.txt Here as we can see a dot \u0026ldquo;.\u0026rdquo; at the head part of the output line shows that this is a regular file.\nWhen going through permissions there are four parts of it which can be seen in form of drwx-rw-r--.\nr \u0026ndash;\u0026gt; Read permission\nw \u0026ndash;\u0026gt; Write permission\nx \u0026ndash;\u0026gt; Executing permission\n\u0026ldquo;-\u0026rdquo; \u0026ndash;\u0026gt; No permission\nMore Important notation for file types # File Type Identifier Directory d Regular File - , . Character File c Link l Socker File s Pipe p Block Device b How permissions are evaluated # When a user tries to read or write to a file, the users permisisons are evaluated in a linear left to right manner:\nFirst owner permissions will be looked at and action will be taken based on its permissions. If the owner has none of the required permissions then group permissions will be looked at and action is taken accordingly. Lastly if the user is not int he group or does not exist then last set of permissions will be looked at and action is taken accordingly. ","date":"14 November 2022","permalink":"/posts/2022-11-14-file-directory-permissions/","section":"Posts","summary":"File and Directory Permissions # Understanding read, write and executable permissions.","title":"File Directory Permissions"},{"content":"Hard Links in Linux # Hard links are links which points to an inode of a file.\nNow what are inodes ? # Inode is a number which is assigned to a file or folder as a universal identifier inside a system. For example:\n$ stat file.txt Output:\nFile: file.txt Size: 0 Blocks: 0 IO Block: 4096 regular empty file Device: 802h/2050d\tInode: 16255425 Links: 1 Access: (0664/-rw-rw-r--) Uid: ( 1000/ user) Gid: ( 1000/ user) Access: 2022-11-13 04:18:10.164573967 +0530 Modify: 2022-11-13 04:18:10.164573967 +0530 Change: 2022-11-13 04:18:10.164573967 +0530 Birth: 2022-11-13 04:18:10.164573967 +0530 Explanation:\nUnder the Blocks attribute we see \u0026ldquo;Inode\u0026rdquo; which shows a specific number, this number is the original identifier of the file in the whole system. Under inode there is information regarding the data\u0026rsquo;s permissions and access time all of which is stored inside blocks of data. When we create a file we store some information in it, we tell linux to store this information under a file name. Major benifit from hardlinking is that a file can be accessed by multiple users at the same time without making two copies of it at different locations.\nLimitations to hardlinks in linux # Hardlinks can only be made for files to files and never directory to directory or file to directory or vice versa. You cannot create hardlinks between different filesystems, for example creating a hardlink between your local disk and your external disk will not work. While making hardlinks it is important to have apropriate permissions to access the file properly. Creating hardlinks: # $ ln /home/Jason/filename.jpg /home/araon/filename.jpg ","date":"14 November 2022","permalink":"/posts/2022-11-14-hardlinks-linux/","section":"Posts","summary":"Hard Links in Linux # Hard links are links which points to an inode of a file.","title":"Hardlinks in Linux"},{"content":"List set and change standard permissions # chgrp - change group\nChange group ownerships\nchmod - change mode\nChange modification permissions\nchown - change ownership\nChange ownerships of users\nWhen we do ls -l we get this:\n$ drwxr-xr-x user family 4.0 KB Thu Nov 10 07:31:07 2022 Downloads Interpretation: Here we see the folder \u0026ldquo;Downloads\u0026rdquo; is owned by user \u0026ldquo;user\u0026rdquo; which has the read / write permissions to it and the super user \u0026ldquo;sudo\u0026rdquo; too which has the admin privelages not to mention. Other than the user their is also a family attribiute next to it which is a group which can be seen having two permissions of reading it and executing it.\nChanging the group of the file it belongs to we can use the command chgrp: # $ chgrp wheel file Output:\n$ drwxr-xr-x user wheel 4.0 KB Thu Nov 10 07:31:07 2022 Downloads To see which a current user belongs to we can use: # $ groups Output:\n$ someuser adm cdrom sudo dip plugdev lpadmin lxd sambashare Changing owenership of file/directory we use chown: # $ sudo chown user filename ","date":"14 November 2022","permalink":"/posts/2022-11-14-how-permissions-work-on-files-directories/","section":"Posts","summary":"List set and change standard permissions # chgrp - change group","title":"How permissions work on files and directories"},{"content":"","date":null,"permalink":"/tags/linux/","section":"Tags","summary":"","title":"Linux"},{"content":"Octal Permissions # In order to understand octal permissions we need to use the stat command:\n$ stat family_dog.jpg Output:\nFile: family_dog.jpg Size: 49\tBlocks: 8\tIO Block: 4096\tregular file Device: fd00h/64768d\tInode: 52946177\tLinks: 1 Access: (0640/-rw-r-----) Uid: ( 1000/\taaron)\tGid: (\t10/\twheel) Here we can see the owner permission is 6, group permission is 4, and other permission is 0, but how do these numbers are calculated?\nTo better understand the octal permissions we need to understand the binary table:\nExample: As we can see in the above example about the rwx permissions, if we look closely:\n-rw-r-----\n-rw: shows 110 r--: shows 100 ---: shows 000 Looking at the binary table:\nBinary Decimal 000 0 001 1 010 2 011 3 100 4 101 5 110 6 111 7 Example: For another example lets see how we can use octal values to set permission for a file:\nSuppose we want to give read, write and executing permissions to the user how will the octal values look like?\n$ chmod 740 family_dog.jpg We gave 7 as we wanted the user to have read, write and executing permissions and group had 4 means group had only read permission and others had 0 as per the binary table.\n","date":"14 November 2022","permalink":"/posts/2022-11-14-octal-permissions/","section":"Posts","summary":"Octal Permissions # In order to understand octal permissions we need to use the stat command:","title":"Octal Permissions"},{"content":"Setting Exact Permissions # Just like while adding or removing permissions we can set exact permissions using the \u0026ldquo;=\u0026rdquo; sign insted of \u0026ldquo;+\u0026rdquo;/\u0026quot;-\u0026quot;.\nImportant notations # Option Permission user u= u=w / u=rw / u=rwx group g= g=w / g=rw / g=rwx others o= o=w / o=rw / o=rwx Example: Suppose we want to give a group permanant permission to read, we will do it like this:\n$ chmod g=r family_dog.jpg Now if we do ls -l:\n$ -r--r-----. 1 aaron family 49 Oct 27 14:41 family_dog.jpg Here we can see that though we gave the group exact read permission so now family will only have read permissions for the file.\nNo what if we use \u0026ldquo;g=\u0026rdquo; empty, this basically says to give all the empty permissions to the group which will result as:\n$ -r--------. 1 aaron family 49 Oct 27 14:41 family_dog.jpg Here we see all group permissions gone because we set \u0026ldquo;g\u0026rdquo; to no permission.\nor we can also do the same thing by:\n$ chmod g-rwx family_dog.jpg This will also do the same job as the previous one.\n","date":"14 November 2022","permalink":"/posts/2022-11-14-setting-exact-permissions/","section":"Posts","summary":"Setting Exact Permissions # Just like while adding or removing permissions we can set exact permissions using the \u0026ldquo;=\u0026rdquo; sign insted of \u0026ldquo;+\u0026rdquo;/\u0026quot;-\u0026quot;.","title":"Setting Exact Permissions"},{"content":"Softlinks in linux # Softlinks are basically an absolute path to the executable, like in windows we see desktop shortcuts which actually leads to an absolute path of the executable resulting in executing that file upon clicking.\nCreating softlinks # $ ln -s path_to_target_file path_to_link_file path_to_target_file -\u0026gt; original file\npath_to_link_file -\u0026gt; represents shortcut\nViewing hard/softlinks # $ ls -l Output:\n$ lrwxrwxrwx root root 23 B Sun Jul 17 00:48:34 2022 ÔíÅ vtrgb ‚áí /etc/alternatives/vtrgb Shows an example of a file in that directory.\nReading hard/softlinks of a file # $ readlink family_dog_shortcut.jpg Output:\n$ /home/aaron/Pictures/family_dog.jpg Shows hard and softlinks of mentioned file.\nImportant points of softlinks # Softlinks can be made between file to file or dir to dir or even between different filesystems.\n","date":"14 November 2022","permalink":"/posts/2022-11-14-softlinks-linux/","section":"Posts","summary":"Softlinks in linux # Softlinks are basically an absolute path to the executable, like in windows we see desktop shortcuts which actually leads to an absolute path of the executable resulting in executing that file upon clicking.","title":"Softlinks in linux"},{"content":"SUID, SGID, and Sticky Bit # SUID, SGID, and sticky bits are Linux file attributes that allow you to define special permissions on files and directories. These attributes can be set using the chmod command and have different effects on the file or directory depending on their usage.\nSUID # SUID (Set User ID) is a file attribute that allows the user who executes the file to run it with the permissions of the file\u0026rsquo;s owner. This is useful when you need to give non-root users permission to perform tasks that require root privileges. For example, if you have a file owned by the root user with SUID enabled, a non-root user can execute the file with root privileges.\nSGID # SGID (Set Group ID) is a file attribute that allows files to be executed with the permissions of the group owner. When SGID is enabled on a directory, new files created in that directory inherit the group ownership of the parent directory. SGID is useful in situations where multiple users need to access files in the same directory and have the same level of access.\nSticky bit # The sticky bit is a file attribute that can be set on directories. When set, it ensures that only the owner of a file or directory can delete or rename it, even if other users have write access to the directory. The sticky bit is often used on directories that are shared by multiple users to prevent accidental deletion or modification of files.\nIt\u0026rsquo;s important to note that SUID, SGID, and sticky bits can introduce security risks if used improperly. For example, enabling SUID on a file that can be modified by other users can allow a malicious user to execute arbitrary code as the file\u0026rsquo;s owner.\nConclusion # In conclusion, SUID, SGID, and sticky bits are powerful Linux file attributes that allow you to set special permissions on files and directories. By using them correctly, you can provide users with the permissions they need to perform tasks while maintaining security and control over your system.\n","date":"14 November 2022","permalink":"/posts/2022-11-14-suid-agid-and-stickybit/","section":"Posts","summary":"SUID, SGID, and Sticky Bit # SUID, SGID, and sticky bits are Linux file attributes that allow you to define special permissions on files and directories.","title":"SUID, SGID and Stickybit"},{"content":"Setup static ip on ubuntu-server # Using netplan\nFirst checkout your interface name: $ ip a Image 2. Now edit your netplan config file:\n$ sudo nano /etc/netplan/netplan-config.yaml Now enter the following: $ network: version: 2 rendered: networkd ethernets: [interface name]: dhcp4: no addresses: - 192.168.1.10/24 gateway4: 192.168.1.1 nameservers: addresses: - 8.8.8.8 - 8.8.4.4 - 8.8.4.4 Here we have disabled DHCP and given a local ip with gateway and nameservers.\nNOTE: YAML files are highly space sensitive.\nAfter saving the above file: $ sudo netplan try netplan-config.yaml This will test the configuration and will ask to revert to default if some error is seen.\n","date":"20 August 2022","permalink":"/posts/2022-08-20-setup-static-ip-on-ubuntu-server/","section":"Posts","summary":"Setup static ip on ubuntu-server # Using netplan","title":"Setup static ip on ubuntu-server"},{"content":" Archiving a file\n$ tar -cvf filename.tar foldername/location `-c` create `-v` verbos output `-f` set a filename/filelocation Compressing a file\na. To compress a file:\n$ gzip filename.tar b. Show the file:\n$ ls Extracting a compressed file\nTo unzip and extract a file:\n$ tar -xzvf filename.tar.gz ","date":"18 August 2022","permalink":"/posts/2022-08-18-file-archiving-compression/","section":"Posts","summary":"Archiving a file","title":"Basic file archiving and compression on linux"},{"content":"Tutorial # Create your own private/public key pair and revocation certificate\n$ gpg --expert --full-gen-key\tExport you public key\n$ gpg --armor --export user-id \u0026gt; pubkey.asc Export your private key\n$ gpg --export-secret-keys --armor user-id \u0026gt; privkey.asc Protect your priavte key and revocation certificate by keeping them somewhere safe.\nList keys by signature:\n$ gpg --list-sigs user_id List all keys:\n$ gpg --list-keys user_id Share your public key on a public keyserver\n$ gpg --send-key key_id NOTE: In Ubuntu by default all the keys are uploaded to keyserver.openpgp.com\nChange default keyserver to another keyserver:\n$ gpg [keyserver-address] --send-key key_id NOTE: If a public key is sent to OpenPGP, it sends a notification on keyowners email address\nBy default keys are not available for search by email address, the mail from openpgp has a link inside it, which needs to be clicked to verify identity\nAfter your key is verified, you can serach for your key on the keyserver:\n$ gpg --search user_id Import others public key to your key-ring:\nIf you want to send someone an encrypted message you¬¥ll first need to import their public key from a file or keyserver\nImport key from a file: $ gpg --import public_key_file Import if you already know a key_id: $ gpg --recv-keys key_id Import from a particular keyserver: $ gpg --keyserver [keyserver-address] --recv-keys key_id Validate public keys:\nWhen you recieve a public key from someone, once you imported that public key how would you verify that public key belongs to that person, we need to authenticate it.\nWe can try following alternatives:\nYou can view the fingerprint of the public key $ gpg --fingerprint user_id You can contact the key≈õ owner over the phone or meet in person.\nCompare the two fingerprints and if the two fingerprints match, means you have the right public key\nThen you sign the key as a valid key:\n$ gpg --sign-key key_id Managing your keys\nList all keys $ gpg --list-keys List all keys with signature $ gpg --list-sigs Delete a key-id $ gpg --delete_key key_id List keys in your private ring\n$ gpg --list-secret-key How to extend key expiration date\nList all the keys $ gpg --list-keys Select a key using key-id which you want to change expiration of $ gpg --edit-key key-id Now you\u0026rsquo;ll enter the gpg shell, here you can see all the applicable commands using helpcommand $ gpg\u0026gt; help List all the keys and select a key you want to edit $ gpg\u0026gt; list Now enter expire in the gpg shell to start editing the expiration date $ gpg\u0026gt; expire Changing expiration time for the primary key. Please specify how long the key should be valid. 0 = key does not expire \u0026lt;n\u0026gt; = key expires in n days \u0026lt;n\u0026gt;w = key expires in n weeks \u0026lt;n\u0026gt;m = key expires in n months \u0026lt;n\u0026gt;y = key expires in n years Key is valid for? (0) Save the changes $ gpg\u0026gt; save How to use the revocation certificate\nIf you\u0026rsquo;re private key is compromised you can regenerate a new key pair using the revocation certificate to let everyone know that you are not using you\u0026rsquo;re old key anymore.\nOn Linux their\u0026rsquo;s a default revocation certificate stored in ~/.gnupg/openpgp-revocs.d/ location.\nFollowing command should be used to revoke a key using a revocation certificate\n$ gpg --output revocation.rev --gen-revoke key-id Now you should import it to your keyring\n$ gpg --import revocation.rev Now upload the revoked key to the keyserver\n$ gpg --send-key key-id ","date":"18 August 2022","permalink":"/posts/2022-08-18-gpg-tutorial/","section":"Posts","summary":"Tutorial # Create your own private/public key pair and revocation certificate","title":"Managing our GPG keys on linux for better security"},{"content":"Tutorial # \u0026ndash;\nPre-requisites # Install the openssh-server package using your package manager e.g. For Ubuntu or Debian:\n$ sudo apt install openssh-server Enable the ssh service\n$ sudo systemctl enable ssh Start the ssh service\n$ sudo systemctl start ssh Important notes # SSH key pairs are two cryptographically secure keys that can be used to authenticate a client to an SSH server. Each key pair consists of a public key and a private key.\nThe private key is retained by the client and should be kept absolutely secret. Any compromise of the private key will allow the attacker to log into servers that are configured with the associated public key without additional authentication. As an additional precaution, the key can be encrypted on disk with a passphrase.\nThe associated public key can be shared freely without any negative consequences. The public key can be used to encrypt messages that only the private key can decrypt. This property is employed as a way of authenticating using the key pair.\nThe public key is uploaded to a remote server that you want to be able to log into with SSH. The key is added to a special file within the user account you will be logging into called ~/.ssh/authorized_keys.\nWhen a client attempts to authenticate using SSH keys, the server can test the client on whether they are in possession of the private key. If the client can prove that it owns the private key, a shell session is spawned or the requested command is executed.\n\u0026ndash;\nCreating ssh keys # Creating a ssh-keypair\n$ ssh-keygen This will generate a private and a public key for the system which will be id_rsa and id_rsa.pub respectively. At this step ssh will ask you for a different path to store the keys which can be defined by entering the path. It will also ask for a passphrase for better security. Now we will have two keys (private and public). You now have a public and private key that you can use to authenticate. The next step is to place the public key on your server so that you can use SSH key authentication to log in. Copying ssh key to your server # Using ssh-copy-id copying the public key:\n$ ssh-copy-id username@ip_address Copying a specified key:\n$ ssh-copy-id -i \u0026lt;path\u0026gt; username@ip_address Authenticating to your server using ssh keys # Now we will connect using\n$ ssh username@ip_address This will ask you to authenticate the user and it is the first time logging in and does not recognise the connection. Disabling password authentication on your server # Now we will edit the ssh_config file for futher hardening\nSet PasswordAuthentication no Set MaxAuthTries 4 Set PubkeyAuthentication yes Set PermitEmptyPasswords no Save and exit the config file. Final setps # Restarting ssh $ sudo service ssh restart Enabling ssh sudo service ssh enable This will start the service on startup everytime. ALL SET !!! # ","date":"18 August 2022","permalink":"/posts/2022-08-18-ssh-key-based-auth/","section":"Posts","summary":"Tutorial # \u0026ndash;","title":"Setup ssh key based authentication"},{"content":"","date":null,"permalink":"/tags/about/","section":"Tags","summary":"","title":"About"},{"content":" In the world of technology, there are many people who enjoy tinkering with their own personal systems and software, often referred to as \"homelab hobbyists\". These individuals are passionate about maintaining their own infrastructure, often using open source software, and using it to learn and experiment with new technologies. One such homelab hobbyist is a junior Linux system administrator named Shashank, who maintains a variety of self-hosted software. Shashank has always had a fascination with technology, especially when it comes to building and maintaining his own systems. He first started experimenting with Linux in graduation, and has been hooked ever since. While completing a degree in Computational Biology, he did some linux assistance based work as a junior Linux system administrator, where he worked for 6 months.\nIn his spare time, Shashank enjoys building and maintaining his own homelab, where he runs a variety of self-hosted software. His lab is made up of several old servers that he\u0026rsquo;s acquired over the years, which he\u0026rsquo;s repurposed for his own personal use. His homelab serves as a testing ground for new technologies, and allows him to experiment with software that he wouldn\u0026rsquo;t otherwise have access to.\nOne of the main pieces of software that Shashank maintains is a self-hosted Nextloud, Bitwarden and a Git server. This allows him to store his code repositories on his own server, rather than relying on third-party services. He also maintains a self-hosted file sharing service, which he uses to share files with his friends and family. Sam likes having control over his own data, and having the ability to manage it himself.\nIn addition to these services, Shashank also maintains a gitbook wiki, which he uses as a personal knowledge base. He\u0026rsquo;s populated the wiki with information about various technologies that he\u0026rsquo;s learned about, as well as documentation for his own homelab. He\u0026rsquo;s found that having a centralized repository for information has been incredibly useful, especially when it comes to troubleshooting and problem-solving.\nShashank also runs a variety of virtual machines on his servers, which he uses for testing and experimentation. He\u0026rsquo;s set up virtual machines for a variety of purposes, including testing new software, experimenting with network configurations, and even running his own personal Minecraft server (not anymore). Having the ability to spin up and tear down virtual machines quickly and easily has been a valuable skill for Shashank to have, both in his personal and professional life.\nWhile maintaining a homelab can be a lot of work, Shashank finds it to be a rewarding hobby. He enjoys the challenge of building and maintaining his own infrastructure, and the satisfaction of knowing that he\u0026rsquo;s in control of his own data. Plus, it\u0026rsquo;s a great way for him to continue learning about new technologies, and to experiment with different configurations and setups.\nAs a junior Linux system administrator, Shashank\u0026rsquo;s homelab hobby has also been beneficial for his career. The skills and knowledge that he\u0026rsquo;s gained through maintaining his own infrastructure have been transferable to his job, allowing him to take on more complex tasks and projects. Plus, his experience with self-hosted software has given him a unique perspective on the importance of security and data privacy, which he\u0026rsquo;s been able to bring to his professional work.\nIn conclusion, homelab hobbyists like Shashank are an important part of the technology community. They\u0026rsquo;re passionate about building and maintaining their own infrastructure, and using it to learn and experiment with new technologies. Sam\u0026rsquo;s experience as a junior Linux system administrator has allowed him to take his hobby to the next level, and has provided him with valuable skills and knowledge that he can use in his personal and professional life.\n","date":"1 January 0001","permalink":"/about/","section":"","summary":"In the world of technology, there are many people who enjoy tinkering with their own personal systems and software, often referred to as \"","title":"About"},{"content":"","date":null,"permalink":"/categories/","section":"Categories","summary":"","title":"Categories"},{"content":"Communities / Blogs I follow # Websites # It\u0026rsquo;s Foss -\u0026gt; https://itsfoss.com TecMint -\u0026gt; https://tecmint.com The Linux Experiment -\u0026gt; https://www.youtube.com/c/TheLinuxExperiment Learn Linux Tv -\u0026gt; https://www.learnlinux.tv/ bugswriter -\u0026gt; https://bugswriter.com/ Luke Smith -\u0026gt; https://lukesmith.xyz Mental Outlaw -\u0026gt; https://github.com/MentalOutlaw Technotim -\u0026gt; https://techno-tim.github.io chris@machine -\u0026gt; https://www.chrisatmachine.com/ Brodie Robertson -\u0026gt; https://github.com/BrodieRobertson Linux Tech Tips -\u0026gt; https://linustechtips.com Techut -\u0026gt; https://techhut.tv Ditrotube -\u0026gt; https://distro.tube The Linux Cast -\u0026gt; https://thelinuxcast.org Freecodecamp -\u0026gt; https://freecodecamp.org Hackersploit -\u0026gt; https://hackersploit.org Programming with Mosh -\u0026gt; https://www.programmingwithmosh.com Cybersecurity Meg -\u0026gt; https://www.youtube.com/c/CybersecurityMeg/ Unixsheikh -\u0026gt; https://unixsheikh.com Livialima -\u0026gt; https://livialima.net Joecollins -\u0026gt; https://www.ezeelinux.com/ GeoHot -\u0026gt; https://geohot.com Jack Rhysider -\u0026gt; https://darknetdiaries.com ippsec -\u0026gt; https://ippsec.rocks Techlore -\u0026gt; https://www.techlore.tech omg!ubuntu -\u0026gt; https://www.omgubuntu.co.uk Hackernews -\u0026gt; https://hackernews.com Landchad -\u0026gt; https://landchad.net Rudra Saraswat -\u0026gt; https://about.ruds.io/ Telegram Communities # Fedora linux -\u0026gt; https://t.me/fedora Manjaro Community -\u0026gt; https://t.me/manjaro ArchLinux -\u0026gt; https://t.me/archlinuxgroup Kde neon -\u0026gt; https://t.me/kdeneon Linux for everyone community -\u0026gt; https://t.me/linux4everyone gentoogram -\u0026gt; https://t.me/gentoogram xda developers -\u0026gt; https://t.me/xdadevelopershub vmware -\u0026gt; https://t.me/vmwaregroup hackernews -\u0026gt; https://t.me/hackernewslive Private your tech -\u0026gt; https://t.me./privateyourtech Its foss community -\u0026gt; https://t.me/itsfoss_official Bleeping computers -\u0026gt; https://t.me/bleepingcomputer Nextcloud -\u0026gt; https://t.me/nextcloud Python django -\u0026gt; https://t.me/pythonl_django popos -\u0026gt; https://t.me/popos_en Cybersecuritynews -\u0026gt; https://t.me/cyber_security_channel ","date":"1 January 0001","permalink":"/posts/2023-02-24-blogs-i-follow/","section":"Posts","summary":"Communities / Blogs I follow # Websites # It\u0026rsquo;s Foss -\u0026gt; https://itsfoss.","title":"Communities / Blogs I follow"}]